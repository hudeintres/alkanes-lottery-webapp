{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":["file:///testbed/components/Navbar.tsx"],"sourcesContent":["\"use client\";\n\nimport Link from \"next/link\";\nimport { usePathname } from \"next/navigation\";\nimport { useWallet } from \"@/contexts/WalletContext\";\n\nexport default function Navbar() {\n    const pathname = usePathname();\n    const { isConnected, address, connect, disconnect, balance } = useWallet();\n\n    const navItems = [\n        { name: \"Jackpot\", href: \"/jackpot\" },\n        { name: \"Liquidity\", href: \"/liquidity\" },\n        { name: \"My Tickets\", href: \"/tickets\" },\n        { name: \"Docs\", href: \"/docs\" },\n    ];\n\n    const handleWalletClick = async () => {\n        if (isConnected) {\n            await disconnect();\n        } else {\n            await connect();\n        }\n    };\n\n    const formatAddress = (addr: string) => {\n        return `${addr.slice(0, 6)}...${addr.slice(-4)}`;\n    };\n\n    const formatBalance = (bal: number | null) => {\n        if (bal === null) return \"0.00000000\";\n        return bal.toFixed(8);\n    };\n\n    return (\n        <nav className=\"fixed top-0 w-full bg-white/80 dark:bg-black/80 backdrop-blur-md border-b border-gray-200 dark:border-gray-800 z-50\">\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n                <div className=\"flex justify-between items-center h-16\">\n                    <Link href=\"/\" className=\"flex items-center space-x-2\">\n                        <div className=\"w-8 h-8 bg-gradient-to-br from-orange-500 to-yellow-500 rounded-lg flex items-center justify-center\">\n                            <span className=\"text-white font-bold text-sm\">₿</span>\n                        </div>\n                        <span className=\"text-xl font-bold text-gray-900 dark:text-white\">\n                            BTC Lottery\n                        </span>\n                    </Link>\n\n                    <div className=\"hidden md:block\">\n                        <div className=\"flex items-center space-x-8\">\n                            {navItems.map((item) => (\n                                <Link\n                                    key={item.name}\n                                    href={item.href}\n                                    className={`text-sm font-medium transition-colors hover:text-orange-500 ${pathname === item.href\n                                            ? \"text-orange-500\"\n                                            : \"text-gray-700 dark:text-gray-300\"\n                                        }`}\n                                >\n                                    {item.name}\n                                </Link>\n                            ))}\n                        </div>\n                    </div>\n\n                    <div className=\"flex items-center space-x-4\">\n                        {isConnected && address && (\n                            <div className=\"hidden sm:flex items-center space-x-2 text-sm text-gray-600 dark:text-gray-300\">\n                                <span>{formatBalance(balance)} BTC</span>\n                                <span className=\"text-gray-400\">•</span>\n                                <span>{formatAddress(address)}</span>\n                            </div>\n                        )}\n                        <button\n                            onClick={handleWalletClick}\n                            className={`px-4 py-2 rounded-lg text-sm font-medium transition-colors ${isConnected\n                                    ? \"bg-green-500 text-white hover:bg-green-600\"\n                                    : \"bg-orange-500 text-white hover:bg-orange-600\"\n                                }`}\n                        >\n                            {isConnected ? \"Disconnect\" : \"Connect Wallet\"}\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </nav>\n    );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAJA;;;;;AAMe,SAAS;IACpB,MAAM,WAAW,IAAA,iJAAW;IAC5B,MAAM,EAAE,WAAW,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,GAAG,IAAA,uIAAS;IAExE,MAAM,WAAW;QACb;YAAE,MAAM;YAAW,MAAM;QAAW;QACpC;YAAE,MAAM;YAAa,MAAM;QAAa;QACxC;YAAE,MAAM;YAAc,MAAM;QAAW;QACvC;YAAE,MAAM;YAAQ,MAAM;QAAQ;KACjC;IAED,MAAM,oBAAoB;QACtB,IAAI,aAAa;YACb,MAAM;QACV,OAAO;YACH,MAAM;QACV;IACJ;IAEA,MAAM,gBAAgB,CAAC;QACnB,OAAO,GAAG,KAAK,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,KAAK,KAAK,CAAC,CAAC,IAAI;IACpD;IAEA,MAAM,gBAAgB,CAAC;QACnB,IAAI,QAAQ,MAAM,OAAO;QACzB,OAAO,IAAI,OAAO,CAAC;IACvB;IAEA,qBACI,8OAAC;QAAI,WAAU;kBACX,cAAA,8OAAC;YAAI,WAAU;sBACX,cAAA,8OAAC;gBAAI,WAAU;;kCACX,8OAAC,uKAAI;wBAAC,MAAK;wBAAI,WAAU;;0CACrB,8OAAC;gCAAI,WAAU;0CACX,cAAA,8OAAC;oCAAK,WAAU;8CAA+B;;;;;;;;;;;0CAEnD,8OAAC;gCAAK,WAAU;0CAAkD;;;;;;;;;;;;kCAKtE,8OAAC;wBAAI,WAAU;kCACX,cAAA,8OAAC;4BAAI,WAAU;sCACV,SAAS,GAAG,CAAC,CAAC,qBACX,8OAAC,uKAAI;oCAED,MAAM,KAAK,IAAI;oCACf,WAAW,CAAC,4DAA4D,EAAE,aAAa,KAAK,IAAI,GACtF,oBACA,oCACJ;8CAEL,KAAK,IAAI;mCAPL,KAAK,IAAI;;;;;;;;;;;;;;;kCAa9B,8OAAC;wBAAI,WAAU;;4BACV,eAAe,yBACZ,8OAAC;gCAAI,WAAU;;kDACX,8OAAC;;4CAAM,cAAc;4CAAS;;;;;;;kDAC9B,8OAAC;wCAAK,WAAU;kDAAgB;;;;;;kDAChC,8OAAC;kDAAM,cAAc;;;;;;;;;;;;0CAG7B,8OAAC;gCACG,SAAS;gCACT,WAAW,CAAC,2DAA2D,EAAE,cAC/D,+CACA,gDACJ;0CAEL,cAAc,eAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAO1D","debugId":null}}]
}