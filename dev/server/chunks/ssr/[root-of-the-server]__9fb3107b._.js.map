{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":["file:///testbed/components/Navbar.tsx"],"sourcesContent":["\"use client\";\n\nimport Link from \"next/link\";\nimport { usePathname } from \"next/navigation\";\nimport { useWallet } from \"@/contexts/WalletContext\";\n\nexport default function Navbar() {\n    const pathname = usePathname();\n    const { isConnected, address, connect, disconnect, balance } = useWallet();\n\n    const navItems = [\n        { name: \"Jackpot\", href: \"/jackpot\" },\n        { name: \"Liquidity\", href: \"/liquidity\" },\n        { name: \"My Tickets\", href: \"/tickets\" },\n        { name: \"Docs\", href: \"/docs\" },\n    ];\n\n    const handleWalletClick = async () => {\n        if (isConnected) {\n            await disconnect();\n        } else {\n            await connect();\n        }\n    };\n\n    const formatAddress = (addr: string) => {\n        return `${addr.slice(0, 6)}...${addr.slice(-4)}`;\n    };\n\n    const formatBalance = (bal: number | null) => {\n        if (bal === null) return \"0.00000000\";\n        return bal.toFixed(8);\n    };\n\n    return (\n        <nav className=\"fixed top-0 w-full bg-white/80 dark:bg-black/80 backdrop-blur-md border-b border-gray-200 dark:border-gray-800 z-50\">\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n                <div className=\"flex justify-between items-center h-16\">\n                    <Link href=\"/\" className=\"flex items-center space-x-2\">\n                        <div className=\"w-8 h-8 bg-gradient-to-br from-orange-500 to-yellow-500 rounded-lg flex items-center justify-center\">\n                            <span className=\"text-white font-bold text-sm\">â‚¿</span>\n                        </div>\n                        <span className=\"text-xl font-bold text-gray-900 dark:text-white\">\n                            BTC Lottery\n                        </span>\n                    </Link>\n\n                    <div className=\"hidden md:block\">\n                        <div className=\"flex items-center space-x-8\">\n                            {navItems.map((item) => (\n                                <Link\n                                    key={item.name}\n                                    href={item.href}\n                                    className={`text-sm font-medium transition-colors hover:text-orange-500 ${pathname === item.href\n                                            ? \"text-orange-500\"\n                                            : \"text-gray-700 dark:text-gray-300\"\n                                        }`}\n                                >\n                                    {item.name}\n                                </Link>\n                            ))}\n                        </div>\n                    </div>\n\n                    <div className=\"flex items-center space-x-4\">\n                        {isConnected && address && (\n                            <div className=\"hidden sm:flex items-center space-x-2 text-sm text-gray-600 dark:text-gray-300\">\n                                <span>{formatBalance(balance)} BTC</span>\n                                <span className=\"text-gray-400\">â€¢</span>\n                                <span>{formatAddress(address)}</span>\n                            </div>\n                        )}\n                        <button\n                            onClick={handleWalletClick}\n                            className={`px-4 py-2 rounded-lg text-sm font-medium transition-colors ${isConnected\n                                    ? \"bg-green-500 text-white hover:bg-green-600\"\n                                    : \"bg-orange-500 text-white hover:bg-orange-600\"\n                                }`}\n                        >\n                            {isConnected ? \"Disconnect\" : \"Connect Wallet\"}\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </nav>\n    );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAJA;;;;;AAMe,SAAS;IACpB,MAAM,WAAW,IAAA,iJAAW;IAC5B,MAAM,EAAE,WAAW,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,GAAG,IAAA,uIAAS;IAExE,MAAM,WAAW;QACb;YAAE,MAAM;YAAW,MAAM;QAAW;QACpC;YAAE,MAAM;YAAa,MAAM;QAAa;QACxC;YAAE,MAAM;YAAc,MAAM;QAAW;QACvC;YAAE,MAAM;YAAQ,MAAM;QAAQ;KACjC;IAED,MAAM,oBAAoB;QACtB,IAAI,aAAa;YACb,MAAM;QACV,OAAO;YACH,MAAM;QACV;IACJ;IAEA,MAAM,gBAAgB,CAAC;QACnB,OAAO,GAAG,KAAK,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,KAAK,KAAK,CAAC,CAAC,IAAI;IACpD;IAEA,MAAM,gBAAgB,CAAC;QACnB,IAAI,QAAQ,MAAM,OAAO;QACzB,OAAO,IAAI,OAAO,CAAC;IACvB;IAEA,qBACI,8OAAC;QAAI,WAAU;kBACX,cAAA,8OAAC;YAAI,WAAU;sBACX,cAAA,8OAAC;gBAAI,WAAU;;kCACX,8OAAC,uKAAI;wBAAC,MAAK;wBAAI,WAAU;;0CACrB,8OAAC;gCAAI,WAAU;0CACX,cAAA,8OAAC;oCAAK,WAAU;8CAA+B;;;;;;;;;;;0CAEnD,8OAAC;gCAAK,WAAU;0CAAkD;;;;;;;;;;;;kCAKtE,8OAAC;wBAAI,WAAU;kCACX,cAAA,8OAAC;4BAAI,WAAU;sCACV,SAAS,GAAG,CAAC,CAAC,qBACX,8OAAC,uKAAI;oCAED,MAAM,KAAK,IAAI;oCACf,WAAW,CAAC,4DAA4D,EAAE,aAAa,KAAK,IAAI,GACtF,oBACA,oCACJ;8CAEL,KAAK,IAAI;mCAPL,KAAK,IAAI;;;;;;;;;;;;;;;kCAa9B,8OAAC;wBAAI,WAAU;;4BACV,eAAe,yBACZ,8OAAC;gCAAI,WAAU;;kDACX,8OAAC;;4CAAM,cAAc;4CAAS;;;;;;;kDAC9B,8OAAC;wCAAK,WAAU;kDAAgB;;;;;;kDAChC,8OAAC;kDAAM,cAAc;;;;;;;;;;;;0CAG7B,8OAAC;gCACG,SAAS;gCACT,WAAW,CAAC,2DAA2D,EAAE,cAC/D,+CACA,gDACJ;0CAEL,cAAc,eAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAO1D","debugId":null}},
    {"offset": {"line": 206, "column": 0}, "map": {"version":3,"sources":["file:///testbed/app/jackpot/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport Navbar from \"@/components/Navbar\";\nimport { useWallet } from \"@/contexts/WalletContext\";\n\nexport default function JackpotPage() {\n    const { isConnected, address } = useWallet();\n    const [jackpotAmount, setJackpotAmount] = useState(\"25.5\");\n    const [ticketCount, setTicketCount] = useState(1);\n    const [timeUntilDraw, setTimeUntilDraw] = useState(\"2:45:30\");\n\n    // Simulate real-time updates\n    useEffect(() => {\n        const interval = setInterval(() => {\n            // Simulate jackpot growth\n            const currentAmount = parseFloat(jackpotAmount);\n            const newAmount = (currentAmount + Math.random() * 0.01).toFixed(3);\n            setJackpotAmount(newAmount);\n        }, 5000);\n\n        return () => clearInterval(interval);\n    }, [jackpotAmount]);\n\n    const handleBuyTickets = async () => {\n        if (!isConnected || !address) {\n            alert(\"Please connect your wallet first!\");\n            return;\n        }\n\n        try {\n            // TODO: Implement smart contract interaction using oyl-sdk\n            // const result = await executeWithBtcWrapUnwrap(/* contract call params */);\n\n            // For now, call our API endpoint\n            const response = await fetch('/api/jackpot', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    ticketCount,\n                    userAddress: address,\n                    amount: (ticketCount * 0.001).toString()\n                }),\n            });\n\n            const result = await response.json();\n\n            if (result.success) {\n                alert(`Successfully bought ${ticketCount} ticket(s)! Transaction ID: ${result.transactionId}`);\n            } else {\n                alert(`Failed to buy tickets: ${result.error}`);\n            }\n        } catch (error) {\n            console.error('Error buying tickets:', error);\n            alert('An error occurred while buying tickets. Please try again.');\n        }\n    };\n\n    return (\n        <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\n            <Navbar />\n\n            <main className=\"pt-16\">\n                <div className=\"mx-auto max-w-7xl px-6 py-12 lg:px-8\">\n                    {/* Jackpot Display */}\n                    <div className=\"text-center mb-12\">\n                        <h1 className=\"text-5xl font-bold tracking-tight text-gray-900 dark:text-white mb-4\">\n                            Current Jackpot\n                        </h1>\n                        <div className=\"text-8xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-orange-500 to-yellow-500 mb-4\">\n                            {jackpotAmount} BTC\n                        </div>\n                        <p className=\"text-lg text-gray-600 dark:text-gray-300\">\n                            Next draw in: <span className=\"font-semibold text-orange-500\">{timeUntilDraw}</span>\n                        </p>\n                        <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-2\">\n                            Draws every 144 Bitcoin blocks â€¢ ~24 hours\n                        </p>\n                    </div>\n\n                    {/* Ticket Purchase Section */}\n                    <div className=\"max-w-2xl mx-auto\">\n                        <div className=\"bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-8\">\n                            <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-6\">\n                                Buy Lottery Tickets\n                            </h2>\n\n                            {!isConnected && (\n                                <div className=\"mb-6 p-4 bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded-lg\">\n                                    <p className=\"text-yellow-800 dark:text-yellow-200\">\n                                        ðŸ”— Please connect your wallet to purchase tickets\n                                    </p>\n                                </div>\n                            )}\n\n                            <div className=\"space-y-6\">\n                                {/* Ticket Quantity */}\n                                <div>\n                                    <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                                        Number of Tickets\n                                    </label>\n                                    <div className=\"flex items-center space-x-4\">\n                                        <button\n                                            onClick={() => setTicketCount(Math.max(1, ticketCount - 1))}\n                                            className=\"w-10 h-10 rounded-full bg-gray-200 dark:bg-gray-700 flex items-center justify-center hover:bg-gray-300 dark:hover:bg-gray-600 transition-colors\"\n                                        >\n                                            -\n                                        </button>\n                                        <span className=\"text-xl font-semibold w-12 text-center\">\n                                            {ticketCount}\n                                        </span>\n                                        <button\n                                            onClick={() => setTicketCount(ticketCount + 1)}\n                                            className=\"w-10 h-10 rounded-full bg-gray-200 dark:bg-gray-700 flex items-center justify-center hover:bg-gray-300 dark:hover:bg-gray-600 transition-colors\"\n                                        >\n                                            +\n                                        </button>\n                                    </div>\n                                    <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\n                                        Each ticket costs 0.001 BTC\n                                    </p>\n                                </div>\n\n                                {/* Total Cost */}\n                                <div className=\"bg-gray-50 dark:bg-gray-700 p-4 rounded-lg\">\n                                    <div className=\"flex justify-between items-center\">\n                                        <span className=\"text-gray-600 dark:text-gray-400\">Total Cost:</span>\n                                        <span className=\"text-xl font-bold text-orange-500\">\n                                            {(ticketCount * 0.001).toFixed(3)} BTC\n                                        </span>\n                                    </div>\n                                </div>\n\n                                {/* Buy Button */}\n                                <button\n                                    onClick={handleBuyTickets}\n                                    disabled={!isConnected}\n                                    className={`w-full py-4 px-6 rounded-lg text-lg font-semibold transition-colors ${isConnected\n                                            ? \"bg-orange-500 text-white hover:bg-orange-600\"\n                                            : \"bg-gray-300 dark:bg-gray-600 text-gray-500 dark:text-gray-400 cursor-not-allowed\"\n                                        }`}\n                                >\n                                    {isConnected ? \"Buy Tickets\" : \"Connect Wallet to Buy\"}\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n\n                    {/* Game Info */}\n                    <div className=\"mt-16 grid grid-cols-1 md:grid-cols-2 gap-8 max-w-4xl mx-auto\">\n                        <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-lg\">\n                            <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-4\">\n                                How to Play\n                            </h3>\n                            <ul className=\"space-y-2 text-gray-600 dark:text-gray-300\">\n                                <li>â€¢ Connect your Bitcoin wallet</li>\n                                <li>â€¢ Choose how many tickets to buy</li>\n                                <li>â€¢ Pay with Bitcoin (0.001 BTC per ticket)</li>\n                                <li>â€¢ Wait for the next draw every 144 blocks</li>\n                                <li>â€¢ Win the entire jackpot if your ticket matches!</li>\n                            </ul>\n                        </div>\n\n                        <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-lg\">\n                            <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-4\">\n                                Prize Distribution\n                            </h3>\n                            <ul className=\"space-y-2 text-gray-600 dark:text-gray-300\">\n                                <li>â€¢ Winner takes the entire jackpot</li>\n                                <li>â€¢ Draws happen automatically every 144 blocks</li>\n                                <li>â€¢ All transactions are on-chain and transparent</li>\n                                <li>â€¢ No house edge - player-funded liquidity</li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </main>\n        </div>\n    );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAJA;;;;;AAMe,SAAS;IACpB,MAAM,EAAE,WAAW,EAAE,OAAO,EAAE,GAAG,IAAA,uIAAS;IAC1C,MAAM,CAAC,eAAe,iBAAiB,GAAG,IAAA,iNAAQ,EAAC;IACnD,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,iNAAQ,EAAC;IAC/C,MAAM,CAAC,eAAe,iBAAiB,GAAG,IAAA,iNAAQ,EAAC;IAEnD,6BAA6B;IAC7B,IAAA,kNAAS,EAAC;QACN,MAAM,WAAW,YAAY;YACzB,0BAA0B;YAC1B,MAAM,gBAAgB,WAAW;YACjC,MAAM,YAAY,CAAC,gBAAgB,KAAK,MAAM,KAAK,IAAI,EAAE,OAAO,CAAC;YACjE,iBAAiB;QACrB,GAAG;QAEH,OAAO,IAAM,cAAc;IAC/B,GAAG;QAAC;KAAc;IAElB,MAAM,mBAAmB;QACrB,IAAI,CAAC,eAAe,CAAC,SAAS;YAC1B,MAAM;YACN;QACJ;QAEA,IAAI;YACA,2DAA2D;YAC3D,6EAA6E;YAE7E,iCAAiC;YACjC,MAAM,WAAW,MAAM,MAAM,gBAAgB;gBACzC,QAAQ;gBACR,SAAS;oBACL,gBAAgB;gBACpB;gBACA,MAAM,KAAK,SAAS,CAAC;oBACjB;oBACA,aAAa;oBACb,QAAQ,CAAC,cAAc,KAAK,EAAE,QAAQ;gBAC1C;YACJ;YAEA,MAAM,SAAS,MAAM,SAAS,IAAI;YAElC,IAAI,OAAO,OAAO,EAAE;gBAChB,MAAM,CAAC,oBAAoB,EAAE,YAAY,4BAA4B,EAAE,OAAO,aAAa,EAAE;YACjG,OAAO;gBACH,MAAM,CAAC,uBAAuB,EAAE,OAAO,KAAK,EAAE;YAClD;QACJ,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,yBAAyB;YACvC,MAAM;QACV;IACJ;IAEA,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC,gIAAM;;;;;0BAEP,8OAAC;gBAAK,WAAU;0BACZ,cAAA,8OAAC;oBAAI,WAAU;;sCAEX,8OAAC;4BAAI,WAAU;;8CACX,8OAAC;oCAAG,WAAU;8CAAuE;;;;;;8CAGrF,8OAAC;oCAAI,WAAU;;wCACV;wCAAc;;;;;;;8CAEnB,8OAAC;oCAAE,WAAU;;wCAA2C;sDACtC,8OAAC;4CAAK,WAAU;sDAAiC;;;;;;;;;;;;8CAEnE,8OAAC;oCAAE,WAAU;8CAAgD;;;;;;;;;;;;sCAMjE,8OAAC;4BAAI,WAAU;sCACX,cAAA,8OAAC;gCAAI,WAAU;;kDACX,8OAAC;wCAAG,WAAU;kDAAwD;;;;;;oCAIrE,CAAC,6BACE,8OAAC;wCAAI,WAAU;kDACX,cAAA,8OAAC;4CAAE,WAAU;sDAAuC;;;;;;;;;;;kDAM5D,8OAAC;wCAAI,WAAU;;0DAEX,8OAAC;;kEACG,8OAAC;wDAAM,WAAU;kEAAkE;;;;;;kEAGnF,8OAAC;wDAAI,WAAU;;0EACX,8OAAC;gEACG,SAAS,IAAM,eAAe,KAAK,GAAG,CAAC,GAAG,cAAc;gEACxD,WAAU;0EACb;;;;;;0EAGD,8OAAC;gEAAK,WAAU;0EACX;;;;;;0EAEL,8OAAC;gEACG,SAAS,IAAM,eAAe,cAAc;gEAC5C,WAAU;0EACb;;;;;;;;;;;;kEAIL,8OAAC;wDAAE,WAAU;kEAAgD;;;;;;;;;;;;0DAMjE,8OAAC;gDAAI,WAAU;0DACX,cAAA,8OAAC;oDAAI,WAAU;;sEACX,8OAAC;4DAAK,WAAU;sEAAmC;;;;;;sEACnD,8OAAC;4DAAK,WAAU;;gEACX,CAAC,cAAc,KAAK,EAAE,OAAO,CAAC;gEAAG;;;;;;;;;;;;;;;;;;0DAM9C,8OAAC;gDACG,SAAS;gDACT,UAAU,CAAC;gDACX,WAAW,CAAC,oEAAoE,EAAE,cACxE,iDACA,oFACJ;0DAEL,cAAc,gBAAgB;;;;;;;;;;;;;;;;;;;;;;;sCAO/C,8OAAC;4BAAI,WAAU;;8CACX,8OAAC;oCAAI,WAAU;;sDACX,8OAAC;4CAAG,WAAU;sDAAuD;;;;;;sDAGrE,8OAAC;4CAAG,WAAU;;8DACV,8OAAC;8DAAG;;;;;;8DACJ,8OAAC;8DAAG;;;;;;8DACJ,8OAAC;8DAAG;;;;;;8DACJ,8OAAC;8DAAG;;;;;;8DACJ,8OAAC;8DAAG;;;;;;;;;;;;;;;;;;8CAIZ,8OAAC;oCAAI,WAAU;;sDACX,8OAAC;4CAAG,WAAU;sDAAuD;;;;;;sDAGrE,8OAAC;4CAAG,WAAU;;8DACV,8OAAC;8DAAG;;;;;;8DACJ,8OAAC;8DAAG;;;;;;8DACJ,8OAAC;8DAAG;;;;;;8DACJ,8OAAC;8DAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQpC","debugId":null}}]
}