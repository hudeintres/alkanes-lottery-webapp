{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///testbed/contexts/WalletContext.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { createContext, useContext, useEffect, useState, ReactNode } from 'react';\n\ninterface WalletContextType {\n    isConnected: boolean;\n    address: string | null;\n    publicKey: string | null;\n    balance: number | null;\n    connect: () => Promise<void>;\n    disconnect: () => Promise<void>;\n    signMessage?: (message: string) => Promise<string>;\n    sendBitcoin?: (to: string, amount: number) => Promise<string>;\n}\n\nconst WalletContext = createContext<WalletContextType | undefined>(undefined);\n\nexport function useWallet() {\n    const context = useContext(WalletContext);\n    if (context === undefined) {\n        throw new Error('useWallet must be used within a WalletProvider');\n    }\n    return context;\n}\n\ninterface WalletProviderProps {\n    children: ReactNode;\n}\n\n// Mock wallet implementation for demo purposes\nexport function WalletProvider({ children }: WalletProviderProps) {\n    const [isConnected, setIsConnected] = useState(false);\n    const [address, setAddress] = useState<string | null>(null);\n    const [publicKey, setPublicKey] = useState<string | null>(null);\n    const [balance, setBalance] = useState<number | null>(null);\n\n    useEffect(() => {\n        // Check if user was previously connected (mock)\n        const savedConnection = localStorage.getItem('walletConnected');\n        if (savedConnection === 'true') {\n            const savedAddress = localStorage.getItem('walletAddress');\n            const savedBalance = localStorage.getItem('walletBalance');\n\n            setIsConnected(true);\n            setAddress(savedAddress);\n            setPublicKey('mock-public-key-' + savedAddress);\n            setBalance(savedBalance ? parseFloat(savedBalance) : 1.5);\n        }\n    }, []);\n\n    const connect = async () => {\n        try {\n            // Mock wallet connection\n            const mockAddress = 'bc1qxy2kgdygjrsqtzq2n0yrf2493p83kkfjhx0wlh';\n            const mockBalance = 1.5;\n\n            setIsConnected(true);\n            setAddress(mockAddress);\n            setPublicKey('mock-public-key-' + mockAddress);\n            setBalance(mockBalance);\n\n            // Save to localStorage\n            localStorage.setItem('walletConnected', 'true');\n            localStorage.setItem('walletAddress', mockAddress);\n            localStorage.setItem('walletBalance', mockBalance.toString());\n\n            console.log('Wallet connected successfully!');\n        } catch (error) {\n            console.error('Failed to connect wallet:', error);\n        }\n    };\n\n    const disconnect = async () => {\n        setIsConnected(false);\n        setAddress(null);\n        setPublicKey(null);\n        setBalance(null);\n\n        // Clear localStorage\n        localStorage.removeItem('walletConnected');\n        localStorage.removeItem('walletAddress');\n        localStorage.removeItem('walletBalance');\n\n        console.log('Wallet disconnected');\n    };\n\n    const walletContextValue: WalletContextType = {\n        isConnected,\n        address,\n        publicKey,\n        balance,\n        connect,\n        disconnect,\n    };\n\n    return (\n        <WalletContext.Provider value={walletContextValue}>\n            {children}\n        </WalletContext.Provider>\n    );\n}\n\n// This component wraps the entire app with wallet provider\nexport function WalletProviderWrapper({ children }: { children: ReactNode }) {\n    return (\n        <WalletProvider>\n            {children}\n        </WalletProvider>\n    );\n}\n"],"names":[],"mappings":";;;;;;;;;AAEA;AAFA;;;AAeA,MAAM,8BAAgB,IAAA,sNAAa,EAAgC;AAE5D,SAAS;IACZ,MAAM,UAAU,IAAA,mNAAU,EAAC;IAC3B,IAAI,YAAY,WAAW;QACvB,MAAM,IAAI,MAAM;IACpB;IACA,OAAO;AACX;AAOO,SAAS,eAAe,EAAE,QAAQ,EAAuB;IAC5D,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,iNAAQ,EAAC;IAC/C,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,iNAAQ,EAAgB;IACtD,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,iNAAQ,EAAgB;IAC1D,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,iNAAQ,EAAgB;IAEtD,IAAA,kNAAS,EAAC;QACN,gDAAgD;QAChD,MAAM,kBAAkB,aAAa,OAAO,CAAC;QAC7C,IAAI,oBAAoB,QAAQ;YAC5B,MAAM,eAAe,aAAa,OAAO,CAAC;YAC1C,MAAM,eAAe,aAAa,OAAO,CAAC;YAE1C,eAAe;YACf,WAAW;YACX,aAAa,qBAAqB;YAClC,WAAW,eAAe,WAAW,gBAAgB;QACzD;IACJ,GAAG,EAAE;IAEL,MAAM,UAAU;QACZ,IAAI;YACA,yBAAyB;YACzB,MAAM,cAAc;YACpB,MAAM,cAAc;YAEpB,eAAe;YACf,WAAW;YACX,aAAa,qBAAqB;YAClC,WAAW;YAEX,uBAAuB;YACvB,aAAa,OAAO,CAAC,mBAAmB;YACxC,aAAa,OAAO,CAAC,iBAAiB;YACtC,aAAa,OAAO,CAAC,iBAAiB,YAAY,QAAQ;YAE1D,QAAQ,GAAG,CAAC;QAChB,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,6BAA6B;QAC/C;IACJ;IAEA,MAAM,aAAa;QACf,eAAe;QACf,WAAW;QACX,aAAa;QACb,WAAW;QAEX,qBAAqB;QACrB,aAAa,UAAU,CAAC;QACxB,aAAa,UAAU,CAAC;QACxB,aAAa,UAAU,CAAC;QAExB,QAAQ,GAAG,CAAC;IAChB;IAEA,MAAM,qBAAwC;QAC1C;QACA;QACA;QACA;QACA;QACA;IACJ;IAEA,qBACI,8OAAC,cAAc,QAAQ;QAAC,OAAO;kBAC1B;;;;;;AAGb;AAGO,SAAS,sBAAsB,EAAE,QAAQ,EAA2B;IACvE,qBACI,8OAAC;kBACI;;;;;;AAGb","debugId":null}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":["file:///testbed/node_modules/next/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n      }\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n      }\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,QAAQ;;KAElC;IACL,IAAIF,QAAQC,GAAG,CAACK,yBAAyB,EAAE;;SAcpC;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1C,IAAIP,QAAQC,GAAG,CAACO,SAAS,eAAE;gBACzBL,OAAOC,OAAO,GAAGC,QAAQ;YAC3B,OAAO;;QAGT,OAAO;;IAOT;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":["file:///testbed/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,YAAY,CAAEC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":["file:///testbed/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.React\n"],"names":["module","exports","require","vendored","React"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,YAAY,CAAEC,KAAK","ignoreList":[0],"debugId":null}}]
}